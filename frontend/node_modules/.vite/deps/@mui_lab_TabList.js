import {
  getPanelId,
  getTabId,
  useTabContext
} from "./chunk-JI3JICTV.js";
import {
  Tabs_default
} from "./chunk-TBB2NU3D.js";
import "./chunk-67AW7KKB.js";
import "./chunk-ET66MRRQ.js";
import "./chunk-TF7H35J6.js";
import "./chunk-ZW7WJ6XU.js";
import "./chunk-2FWQBSOI.js";
import "./chunk-OTSDYRGV.js";
import "./chunk-RMGEUINN.js";
import "./chunk-RPC7SSJE.js";
import "./chunk-LPB46HBA.js";
import "./chunk-MEMSUCEI.js";
import "./chunk-3ZG5Z2KZ.js";
import "./chunk-MWZU6Z4L.js";
import "./chunk-N3NHP2PF.js";
import "./chunk-CB323Y6E.js";
import "./chunk-ER7TMUTG.js";
import "./chunk-ZEVYP4B3.js";
import "./chunk-6G66IEGY.js";
import "./chunk-IWKDWTNV.js";
import "./chunk-AX45CUQC.js";
import {
  _objectWithoutPropertiesLoose,
  init_objectWithoutPropertiesLoose
} from "./chunk-BYQNWZ3B.js";
import "./chunk-PU5TD4PC.js";
import "./chunk-6JDZNCFN.js";
import "./chunk-6L3GCBJN.js";
import "./chunk-YXBCJ7LW.js";
import "./chunk-U4FLZ35J.js";
import {
  require_prop_types
} from "./chunk-WX4KK3LC.js";
import {
  require_jsx_runtime
} from "./chunk-DT77FM6J.js";
import "./chunk-4XMZU32E.js";
import "./chunk-YIC7PJAM.js";
import "./chunk-URKBNRAN.js";
import "./chunk-OD3RMJJQ.js";
import "./chunk-KCDLYRUT.js";
import "./chunk-3AXFH55A.js";
import {
  _extends,
  init_extends
} from "./chunk-ZW3DX352.js";
import {
  require_react
} from "./chunk-4D5CYJYK.js";
import {
  __toESM
} from "./chunk-CEQRFMJQ.js";

// node_modules/@mui/lab/TabList/TabList.js
init_extends();
init_objectWithoutPropertiesLoose();
var React = __toESM(require_react());
var import_prop_types = __toESM(require_prop_types());
var import_jsx_runtime = __toESM(require_jsx_runtime());
var _excluded = ["children"];
var TabList = React.forwardRef(function TabList2(props, ref) {
  const {
    children: childrenProp
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded);
  const context = useTabContext();
  if (context === null) {
    throw new TypeError("No TabContext provided");
  }
  const children = React.Children.map(childrenProp, (child) => {
    if (!React.isValidElement(child)) {
      return null;
    }
    return React.cloneElement(child, {
      // SOMEDAY: `Tabs` will set those themselves
      "aria-controls": getPanelId(context, child.props.value),
      id: getTabId(context, child.props.value)
    });
  });
  return (0, import_jsx_runtime.jsx)(Tabs_default, _extends({}, other, {
    ref,
    value: context.value,
    children
  }));
});
true ? TabList.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A list of `<Tab />` elements.
   */
  children: import_prop_types.default.node
} : void 0;
var TabList_default = TabList;
export {
  TabList_default as default
};
//# sourceMappingURL=@mui_lab_TabList.js.map
